[package]
name = "trace-viewer"
version.workspace = true
license.workspace = true
edition.workspace = true

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
actix-files = { workspace = true, optional = true }
actix-web = { workspace = true, optional = true }
cfg-if.workspace = true
chrono = { workspace = true, optional = false }
clap = { workspace = true, optional = true }
console_error_panic_hook.workspace = true
leptos.workspace = true
leptos_meta.workspace = true
leptos_actix = { workspace = true, optional = true }
leptos_reactive.workspace = true
leptos_router.workspace = true
leptos-use.workspace = true
miette.workspace = true
plotly = { workspace = true, optional = true }
rdkafka = { workspace = true, optional = true }
serde = { workspace = true, optional = false }
strum = { workspace = true, optional = false }
supermusr-common = { workspace = true, optional = true }
supermusr-streaming-types = { workspace = true, optional = false }
thiserror = { workspace = true, optional = false }
tokio = { workspace = true, optional = true }
tracing = { workspace = true, optional = false }
tracing-subscriber.workspace = true
uuid = { workspace = true, optional = true }
wasm-bindgen = { workspace = true, optional = true }

[features]
hydrate = [
  "dep:wasm-bindgen",
  "leptos/hydrate"
]
ssr = [
  "leptos/ssr",
  "leptos_meta/ssr",
  "leptos-use/ssr",
  "dep:uuid",
  "dep:actix-web",
  "dep:actix-files",
  "dep:leptos_actix",
  "dep:tokio",
  "dep:rdkafka",
  "dep:plotly",
  "dep:clap",
  "dep:supermusr-common",
]

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name   
output-name = "TraceViewer"
# The port to use for automatic reload monitoring
reload-port = 3001
# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"
# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg	
site-pkg-dir = "pkg"
# [Optional] Files in the asset-dir will be copied to the site-root directory
assets-dir = "public"
# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"
# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "style/output.scss"

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false


[profile.wasm-release]
inherits = "release"
opt-level = 'z'
lto = true
codegen-units = 1
panic = "abort"

