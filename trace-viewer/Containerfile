# Build
FROM docker.io/library/rust:latest as builder

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
      clang-19 \
      cmake \
      flatbuffers-compiler \
      libclang1-19 \
    && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Install cargo-binstall (https://github.com/cargo-bins/cargo-binstall)
RUN wget https://github.com/cargo-bins/cargo-binstall/releases/latest/download/cargo-binstall-x86_64-unknown-linux-musl.tgz && \
    tar -xvf cargo-binstall-x86_64-unknown-linux-musl.tgz && \
    cp cargo-binstall /usr/local/cargo/bin

# Ensure this matches the version installed by devenv.sh in the development environment
RUN cargo binstall -y cargo-leptos@0.2.42

WORKDIR /app
COPY . .

RUN cargo leptos build --release -vv

# Runtime
FROM docker.io/library/debian:13-slim

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
      openssl \
      ca-certificates \
      tini \
    && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy the server binary to the /app directory
COPY --from=builder /app/target/release/trace-viewer /app/app

# /target/site contains our JS/WASM/CSS, etc.
COPY --from=builder /app/target/site /app/site

# Copy Cargo.toml if itâ€™s needed at runtime
COPY --from=builder /app/Cargo.toml /app/

ENV LEPTOS_SITE_ADDR="0.0.0.0:3000"
ENV LEPTOS_SITE_ROOT="site"
EXPOSE 3000/tcp

ENTRYPOINT ["/usr/bin/tini", "--", "/app/app"]
