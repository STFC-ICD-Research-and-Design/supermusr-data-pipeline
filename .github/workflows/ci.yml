---
name: CI

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:

jobs:
  formatting-and-quality:
    name: Formatting and Quality
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
      - uses: cachix/install-nix-action@v31
      - uses: cachix/cachix-action@v16
        with:
          name: devenv
      - name: Install devenv.sh
        run: nix profile install nixpkgs#devenv

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            devenv:
              - 'devenv.*'
            rust:
              - '**/*.rs'
              - '**/Cargo.toml'
              - 'Cargo.lock'

      - name: Format
        shell: devenv shell bash -- -e {0}
        run: treefmt --fail-on-change

      - name: cargo-deny
        shell: devenv shell bash -- -e {0}
        run: cargo deny check

      - name: Clippy
        if: steps.filter.outputs.devenv == 'true' || steps.filter.outputs.rust == 'true'
        shell: devenv shell bash -- -e {0}
        run: cargo clippy --all-targets -- -D warnings

      - name: Repository cleanliness
        if: steps.filter.outputs.devenv == 'true' || steps.filter.outputs.rust == 'true'
        shell: devenv shell bash -- -e {0}
        run: git diff --exit-code

  build-and-test:
    name: Build and Test
    needs:
      - formatting-and-quality

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
      - uses: cachix/install-nix-action@v31
      - uses: cachix/cachix-action@v16
        with:
          name: devenv
      - name: Install devenv.sh
        run: nix profile install nixpkgs#devenv

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            rust:
              - '**/*.rs'
              - '**/Cargo.toml'
              - 'Cargo.lock'
              - 'rust-toolchain.toml'

      - name: Build
        if: steps.filter.outputs.rust == 'true'
        shell: devenv shell bash -- -e {0}
        run: cargo build --all-targets

      - name: Test
        if: steps.filter.outputs.rust == 'true'
        shell: devenv shell bash -- -e {0}
        run: cargo test --all-targets

  components:
    name: Components
    needs:
      - build-and-test

    strategy:
      matrix:
        component:
          - digitiser-aggregator
          - nexus-writer
          - simulator
          - trace-reader
          - trace-to-events

    uses: ./.github/workflows/component.yml
    with:
      component: ${{ matrix.component }}

  trace-viewer:
    name: Trace Viewer
    needs:
      - build-and-test

    uses: ./.github/workflows/trace-viewer.yml
