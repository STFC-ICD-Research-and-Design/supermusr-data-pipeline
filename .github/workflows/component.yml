---
name: Component

on:
  workflow_call:
    inputs:
      component:
        required: true
        type: string

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            component:
              # Devenv
              - 'devenv.*'
              # GitHub Actions
              - '.github/workflows/*'
              # Container common
              - 'Containerfile'
              # Cargo common
              - 'rust-toolchain.toml'
              - 'Cargo.toml'
              - 'Cargo.lock'
              # Rust common
              - 'common/Cargo.toml'
              - 'common/**/*.rs'
              - 'streaming-types/Cargo.toml'
              - 'streaming-types/**/*.rs'
              # Component
              - "${{ inputs.component }}/Cargo.toml"
              - "${{ inputs.component }}/**/*.rs"

      - name: Build and push container image
        if: steps.filter.outputs.component == 'true'
        run: |
          set -x

          buildah build --build-arg component=${{ inputs.component }} -t ${{ inputs.component }}:latest

          if [[ "${{ github.ref_name }}" == 'main' || "${{ github.ref_type }}" == 'tag' ]]; then
            echo "Pushing container images to GHCR..."

            # See https://github.com/actions/runner-images/issues/10443
            sudo sysctl -w kernel.apparmor_restrict_unprivileged_userns=0

            local_cr="containers-storage:localhost/${{ inputs.component }}:latest"

            # The container registry to push images to
            remote_cr="docker://ghcr.io/stfc-icd-research-and-design/supermusr-${{ inputs.component }}"
            remote_cr_creds="${{ github.repository_owner }}:${{ github.token }}"

            # Push image using the Git ref name as the image tag (i.e. "main" or the tag name)
            skopeo copy --dest-creds="$remote_cr_creds" "$local_cr" "$remote_cr:${{ github.ref_name }}"

            # Push image using the Git SHA as the image tag
            skopeo copy --dest-creds="$remote_cr_creds" "$local_cr" "$remote_cr:${{ github.sha }}"

            # If the trigger was a tag (i.e. a release)
            if [[ "${{ github.ref_type }}" == 'tag' ]]; then
              skopeo copy --dest-creds="$remote_cr_creds" "$local_cr" "$remote_cr:latest"
            fi
          else
            echo "NOT pushing any container images"
          fi
